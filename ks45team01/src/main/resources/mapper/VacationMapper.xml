<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks45team01.unity.mapper.VacationMapper">
	<resultMap type="VacationCategory" id="vacationCategoryMap">
		<id property="vacationCategoryNum" 	column="vacation_category_num" />
		<result property="vacationCategoryName" column="vacation_category_name" />
		<result property="memberNum" column="member_num" />
		<result property="regDate" column="reg_date" />
		<result property="vacationUse" column="vacation_use" />
		<result property="correctMemberNum" column="correct_member_num" />
		<result property="correctDate" column="correct_date" />
	</resultMap>
	<resultMap type="VacationSort" id="vacationSortMap">
		<id property="vacationSortNum" 	column="vacation_sort_num" />
		<result property="vacationSortName" column="vacation_sort_name" />
		<result property="memberNum" column="member_num" />
		<result property="regDate" column="reg_date" />
		<result property="vacationUse" column="vacation_use" />
		<result property="correctMemberNum" column="correct_member_num" />
		<result property="correctDate" column="correct_date" />
	</resultMap>
	<resultMap type="VacationType" id="vacationTypeMap">
		<id property="vacationTypeNum" 	column="vacation_type_num" />
		<result property="vacationName" column="vacation_name" />
		<result property="vacationType" column="vacation_type" />
		<result property="subtractUnit" column="subtract_unit" />
		<result property="vacationUse" column="vacation_use" />
		<result property="memberNum" column="member_num" />
		<result property="regDate" column="reg_date" />
		<result property="correctMemberNum" column="correct_member_num" />
		<result property="correctCate" column="correct_date" />
	</resultMap>
	<resultMap type="VacationStandard" id="vacationStandardMap">
		<id property="serviceNum" 	column="service_num" />
		<result property="lengthOfService" column="length_of_service" />
		<result property="addVacation" column="add_vacation" />
		<result property="giveTime" column="give_time" />
		<result property="vacationStandardUse" column="vacation_standard_use" />
		<result property="regMemberNum" column="reg_member_num" />
		<result property="regDate" column="reg_date" />
		<result property="correctMemberNum" column="correct_member_num" />
		<result property="correctCate" column="correct_date" />
	</resultMap>
	<resultMap type="MemberList" id="memberListResultMap">
		<id property="memberNum" column="member_num"/>
		<result property="memberPw" column="member_pw"/>
		<result property="memberName" column="member_name"/>
		<result property="memberGender" column="member_gender"/>
		<result property="memberEmail" column="member_email"/>
		<result property="memberBirth" column="member_birth"/>
		<result property="memberPhone" column="member_phone"/>	
		<result property="memberDormant" column="member_dormant"/>
		<result property="memberDormantDate" column="member_dormant_date"/>	
		<result property="departmentNum" column="department_num"/>	
		<result property="positionNum" column="position_num"/>	
		<result property="memberInsertDate" column="member_insert_date"/>
		</resultMap>
	<resultMap type="VacationInformation" id="vacationInformationMap">
		<id property="vacationInfoNum" column="vacation_info_num"/>
		<result property="memberNum" column="member_num"/>
		<result property="serviceNum" column="service_num"/>
		<result property="lengthOfService" column="length_of_service"/>
		<result property="addVacation" column="add_vacation"/>
		<result property="rewardVacationNumber" column="reward_vacation_number"/>
		<result property="replaceVacationDay" column="replace_vacation_day"/>
		<result property="rewardVacationNumber" column="reward_vacation_number"/>
		<result property="sickVacationDay" column="sick_vacation_day"/>		
		<result property="personalBuisinessVacationDay" column="personal_buisiness_vacation_day"/>
		<result property="remainVacationDay" column="remain_vacation_day"/>
		<result property="remainVacationTime" column="remain_vacation_time"/>
		<result property="vacationStandardUse" column="vacation_standard_use"/>
		<result property="useVacationYear" column="use_vacation_year"/>
		<result property="regMemberNum" column="reg_member_num"/>	
		<result property="regDate" column="reg_date"/>
		<result property="correctMemberNum" column="correct_member_num"/>
		<result property="correctDate" column="correct_date"/>
			<association property="memberList" javaType="MemberList">
					<id property="memberNum" column="member_num"/>
					<result property="memberPw" column="member_pw"/>
					<result property="memberName" column="member_name"/>
					<result property="memberGender" column="member_gender"/>
					<result property="memberEmail" column="member_email"/>
					<result property="memberBirth" column="member_birth"/>
					<result property="memberPhone" column="member_phone"/>	
					<result property="memberDormant" column="member_dormant"/>
					<result property="memberDormantDate" column="member_dormant_date"/>	
					<result property="departmentNum" column="department_num"/>	
					<result property="positionNum" column="position_num"/>	
					<result property="memberInsertDate" column="member_insert_date"/>
			</association>	
	</resultMap>
	<resultMap type="MemberList" id="memberListMap">
		<id property="memberNum" column="member_num"/>
		<result property="memberPw" column="member_pw"/>
		<result property="memberName" column="member_name"/>
		<result property="memberGender" column="member_gender"/>
		<result property="memberEmail" column="member_email"/>
		<result property="memberBirth" column="member_birth"/>
		<result property="memberPhone" column="member_phone"/>	
		<result property="memberDormant" column="member_dormant"/>
		<result property="memberDormantDate" column="member_dormant_date"/>	
		<result property="departmentNum" column="department_num"/>	
		<result property="positionNum" column="position_num"/>	
		<result property="memberInsertDate" column="member_insert_date"/>	
	</resultMap> 
	<select id="getCommonNewCode" parameterType="String" resultType="String">
		/* 자동증가코드 */
		SELECT
			CASE
			WHEN COUNT(1) = 0 THEN CONCAT(#{column}, '_1')
			ELSE
				CONCAT(#{column},'_', MAX(CAST(SUBSTRING_INDEX(${column}, CONCAT(#{column}, '_'), -1) AS UNSIGNED))+1)
			END AS newCode
		FROM
			${table} ;
	</select>
	<select id="getVacationCategory" resultType="List" resultMap="vacationCategoryMap">
		/* 휴가대분류 목록 조회 */
		SELECT 
		*
		FROM 
		tb_vacation_category;
	</select>
	<select id="getVacationSort" resultType="List" resultMap="vacationSortMap">
		/* 휴가중분류 목록 조회 */
		SELECT 
		*
		FROM 
		tb_vacation_sort;
	</select>
	<select id="getVacationType" resultType="List" resultMap="vacationTypeMap">
		/* 휴가종류 목록 조회 */
		SELECT 
		*
		FROM 
		tb_vacation_type;
	</select>
	<select id="getVacationStandard" resultType="List" resultMap="vacationStandardMap">
		/* 휴가기준 목록 조회 */
		SELECT 
		*
		FROM 
		tb_vacation_standard;
	</select>
	<update id="updateVacationCategoryA" parameterType="String">
		/* 휴가대분류 비동기 수정 */
		UPDATE tb_vacation_category
		SET
		vacation_use=#{vacationUse}
		WHERE 
		vacation_category_num=#{vacationCategoryNum};
	</update>
	<update id="updateVacationStandardA" parameterType="String">
		/* 휴가 기준 비동기 수정 */
		UPDATE tb_vacation_standard
		SET
		vacation_standard_use=#{vacationStandardUse}
		WHERE 
		vacation_standard_num=#{vacationStandardNum};
	</update>
	<update id="updateVacationSortA" parameterType="String">
		/* 휴가 중분류 비동기 수정 */
		UPDATE tb_vacation_sort
		SET
		vacation_use=#{vacationUse}
		WHERE 
		vacation_sort_num=#{vacationSortNum};
	</update>
	<update id="updateVacationTypeA" parameterType="String">
		/* 휴가 종류 비동기 수정 */
		UPDATE tb_vacation_type
		SET
		vacation_use=#{vacationUse}
		WHERE 
		vacation_type_num=#{vacationTypeNum};
	</update>
	<insert id="addVacationType" parameterType="VacationType">
		/* 휴가 종류 등록 */
		INSERT INTO tb_vacation_type
		(vacation_type_num, 
		vacation_name, 
		vacation_type, 
		subtract_unit, 
		vacation_use, 
		member_num, 
		reg_date)
		VALUES (#{vacationTypeNum}, #{vacationName}, #{vacationType}, #{subtractUnit}, #{vacationUse}, #{memberNum} , NOW());
	</insert>
	<select id="getVacationTypeByNum" parameterType="String" resultMap="vacationTypeMap">
		/* 특정 휴가 종류 조회 */
		SELECT
		*
		FROM
			tb_vacation_type
		WHERE
			vacation_type_num=#{vacationTypeNum};
	</select>
	<update id="updateVacationType" parameterType="VacationType">
	/* 휴가 종류 수정 */
		UPDATE tb_vacation_type
		<trim prefix="SET" prefixOverrides=",">
		<if test="vacationName != null and vacationName != ''">
		vacation_name=#{vacationName}
		</if>
		<if test="vacationType != null and vacationType != ''">
		,vacation_type=#{vacationType}
		</if>
		<if test="subtractUnit != null and subtractUnit != ''">
		,subtract_unit=#{subtractUnit}
		</if>
		<if test="vacationUse != null and vacationUse != ''">
		,vacation_use=#{vacationUse}
		</if>
		<if test="memberNum != null and memberNum != ''">
		,correct_member_num=#{memberNum}
		</if>
		</trim>
		,correct_date=CURDATE()
		WHERE vacation_type_num=#{vacationTypeNum};
	</update>
	<insert id="addVacationCategory" parameterType="VacationCategory">
		/* 휴가대분류 입력 */
		INSERT INTO tb_vacation_category
		(vacation_category_num,
		 vacation_category_name,
		 member_num,
		 reg_date,	
		 vacation_use)
		VALUES (#{vacationCategoryNum}, #{vacationCategoryName}, #{memberNum}, NOW(), #{vacationUse});
	</insert>
	<select id="getVacationCategoryByNum" parameterType="String" resultMap="vacationCategoryMap" >
		/* 특정 휴가 대분류 조회 */
		SELECT
			*
		FROM
			tb_vacation_category
		WHERE
			vacation_category_num= #{vacationCategoryNum};
	</select>
	<update id="updateVacationCategory" parameterType="VacationCategory">
		/* 휴가 대분류 수정 */
		UPDATE tb_vacation_category
		<trim prefix="SET" prefixOverrides=",">
			<if test="vacationCategoryName != null and vacationCategoryName != ''">
			vacation_category_name=#{vacationCategoryName}
			</if>
			<if test="correctMemberNum != null and correctMemberNum != ''">
			,correct_member_num= #{correctMemberNum}
			</if>
			<if test="vacationUse != null and vacationUse != ''">
			,vacation_use=#{vacationUse}
			</if>
		</trim>
		,correct_date=NOW()
		WHERE vacation_category_num=#{vacationCategoryNum};
	</update>
	<insert id="addVacationSort" parameterType="VacationSort">
		/* 휴가 중분류 입력 */
		INSERT INTO tb_vacation_sort
		(vacation_sort_num, 
		vacation_sort_name, 
		member_num, 
		reg_date, 
		vacation_use)
		VALUES (#{vacationSortNum}, #{vacationSortName}, #{memberNum}, NOW(), #{vacationUse} );
	</insert>
	<select id="getVacationSortByNum" parameterType="String" resultMap="vacationSortMap" >
		/* 특정 휴가 중분류 조회 */
		SELECT
			*
		FROM
			tb_vacation_sort
		WHERE
			vacation_sort_num= #{vacationSortNum};
	</select>
	<update id="updateVacationSort" parameterType="VacationSort">
		/* 휴가 중분류 수정 */
		UPDATE tb_vacation_sort
		<trim prefix="SET" prefixOverrides=",">
			<if test="vacationSortName != null and vacationSortName != ''">
			vacation_sort_name=#{vacationSortName}
			</if>
			<if test="correctMemberNum != null and correctMemberNum != ''">
			,correct_member_num= #{correctMemberNum}
			</if>
			<if test="vacationUse != null and vacationUse != ''">
			,vacation_use=#{vacationUse}
			</if>
		</trim>
		,correct_date=NOW()
		WHERE vacation_sort_num=#{vacationSortNum};
	</update>
	<select id="getMemberNameByLength" parameterType="String" resultType="List" resultMap="memberListResultMap">
		/* 근속연수에 따른 사원이름 */
		select
			*
		from
			tb_member 
		where
			${length} = timestampdiff(year, member_insert_date, curdate());
	</select>
	<insert id="addVacationInfo" parameterType="VacationInformation">
		/* 연차 등록 */
		INSERT INTO tb_vacation_information
			(vacation_info_num,
			member_num,
			service_num, 
			length_of_service, 
			add_vacation, 
			use_vacation_year, 
			reg_date
			)
		VALUES ( #{vacationInfoNum}, #{memberNum}, #{serviceNum}, #{lengthOfService}, #{addVacation}, #{useVacationYear}, NOW());
	</insert>
	<update id="updateRemainVacation" parameterType="String">
		/* 총연차 수 계산 */
			UPDATE tb_vacation_information
			SET
				remain_vacation_day=sf_remainVacation(#{vacationInfoNum})
			WHERE vacation_info_num=#{vacationInfoNum};
	</update>
	<select id="getVacationStandardByLength" parameterType ="String" resultMap ="vacationStandardMap">
		/* 특정 휴가기준 조회 */
		SELECT
			*
		from
			tb_vacation_standard AS s
		WHERE
			s.length_of_service = #{lengthOfService}
			and
		s.vacation_standard_use = 'Y';
	</select>
	<select id="getVacationInfoAll" resultType="List" resultMap="vacationInformationMap">
		/* 전사원 휴가 정보 조회 */
		SELECT
			*
		FROM	
			tb_vacation_information AS v
		INNER JOIN
			tb_member AS m
			on
			v.member_num = m.member_num;
	</select>
	<select id="getMemberList" resultType="List" resultMap="memberListMap">
	/* 사원 조회 */
		SELECT
			*
		FROM
			tb_member;
	</select>
	<select id="getVacationInfoByNameAndYear" resultType="String">
		/* 휴가 정보 pk 값 조회 */
		SELECT
			i.vacation_info_num
		FROM
			tb_member AS m
			INNER join
			tb_vacation_information AS i
			on
			m.member_num = i.member_num
			where
			i.use_vacation_year = #{useVacationYear}
			and
			m.member_num = #{memberNum};
	</select> 
	<update id="updateVacationInfo" parameterType="VacationInformation" >
		UPDATE tb_vacation_information
		<trim prefix="SET" prefixOverrides=",">
		<if test="rewardVacationNumber != null and rewardVacationNumber != ''">
		reward_vacation_number=#{rewardVacationNumber},
		</if>
		<if test="replaceVacationDay != null and replaceVacationDay != ''">
		replace_vacation_day=#{replaceVacationDay},
		</if>
		<if test="sickVacationDay != null and sickVacationDay != ''">
		sick_vacation_day=#{sickVacationDay},
		</if>
		<if test="personalBuisinessVacationDay != null and personalBuisinessVacationDay != ''">
		personal_buisiness_vacation_day=#{personalBuisinessVacationDay},
		</if>
		<if test="remainVacationTime != null and remainVacationTime != ''">
		remain_vacation_time=0,
		</if>
		<if test="rewardVacationNumber != null and rewardVacationNumber != ''">
		use_vacation_year=#{useVacationYear},
		</if>
		<if test="correctMemberNum != null and correctMemberNum != ''">
		correct_member_num=#{correctMemberNum},
		</if>
		</trim>
		correct_date=NOW()
		WHERE vacation_info_num=#{vacationInfoNum};
	</update>
</mapper>
